title charging process

actor eMSP user
participant MainActivity
participant chargingActivity
participant appNotificationService
participant eMSP_notificationService
participant Charging column
participant Switcher
participant payment_API
participant CPMS_chargingService
participant Battery pack
database Reservations DBMS


eMSP user->MainActivity:clickChargeButton
activate MainActivity
MainActivity->chargingActivity:startChargingActivity
deactivate MainActivity
activate chargingActivity
chargingActivity->chargingActivity:selectReservation
alt NFC
eMSP user->chargingActivity:nfcToken
else manualToken
eMSP user->chargingActivity:manualToken
end
chargingActivity->chargingActivity:parseToken

alt validToken
	activate CPMS_chargingService
 	chargingActivity->CPMS_chargingService:checkReservation(user)
    CPMS_chargingService->Reservations DBMS:find(query)
    activate Reservations DBMS
    alt validReservation
    	linear 
    	Reservations DBMS-->CPMS_chargingService:OK
        deactivate Reservations DBMS
        CPMS_chargingService-->chargingActivity:OK
        chargingActivity-->eMSP user:startingChargeProecess
        CPMS_chargingService->Charging column:isPlugged
                activate Charging column
        eMSP user->Charging column:plugCar(socket)
		linear off
        Charging column-->>CPMS_chargingService:carPlugged(chargeLevel, socket)	
        linear on
		CPMS_chargingService->Battery pack:getStoredPrice
		activate Battery pack
		Battery pack-->CPMS_chargingService:storedPrice
		deactivate Battery pack

		alt stored price lower than current one
			CPMS_chargingService->Switcher:startSupplyWithBattery
			activate Switcher
			Switcher-->CPMS_chargingService:OK
			deactivate Switcher
		else 
			CPMS_chargingService->Switcher:startSupplyWithDSO
			activate Switcher
			Switcher-->CPMS_chargingService:OK
			deactivate Switcher
		end
        
        activate CPMS_chargingService
        space
        deactivate CPMS_chargingService
        loop until full charge or timeout
        CPMS_chargingService->>Charging column:levelCheck
        Charging column-->CPMS_chargingService:chargingLevel
        end
        alt fullCharge or time-frame out
        	CPMS_chargingService->Switcher:stopSupplying(column, socket)
        	activate Switcher
        	Switcher-->CPMS_chargingService:OK
        	deactivate Switcher
        	CPMS_chargingService->eMSP_notificationService:chargeOut
        	activate eMSP_notificationService
        	eMSP_notificationService-->CPMS_chargingService:received
        	activate appNotificationService
			appNotificationService->>eMSP_notificationService: periodicNotificationCheck
	        eMSP_notificationService-->appNotificationService:chargeOut
            space 
            deactivate eMSP_notificationService
    	    appNotificationService->eMSP user:chargeOut
            space
            deactivate appNotificationService
            
        	eMSP user->Charging column:unplugCar
            Charging column->CPMS_chargingService:carUnplugged
            #COlumn api non fa richiesta diretta a cpms ma dopo aver fermato la ricarica questo aspetta che l'user disconnetta il plug, poi prepara il conto
            deactivate Charging column
            CPMS_chargingService->chargingActivity:totalBill
            #CPMS CANNOT MAKE REQUEST DIRECTLY TO APP
            # puoi fare che dopo essere stato avvisato che il tempo è scaduto chiede per il totale 
            #che poi in realtà NON ci tenevamo direttamente il max prima della prenotazione e poi andavamo a rimborsare il rimanente??
            chargingActivity->payment_API:requestPayment(amount, beneficiary)
            activate payment_API
            payment_API-->chargingActivity:done
			deactivate payment_API
            chargingActivity-->eMSP user:paymentDone
            chargingActivity-->CPMS_chargingService:paymentDone
            deactivate CPMS_chargingService
            deactivate chargingActivity
          
        end
       
    else Reservation not found
    	
        activate chargingActivity 
        activate Reservations DBMS
    	Reservations DBMS-->CPMS_chargingService:fail
        deactivate Reservations DBMS
        CPMS_chargingService-->chargingActivity:fail
        chargingActivity-->eMSP user:fail
        deactivate chargingActivity
    end
else invalidToken
	activate chargingActivity 
	chargingActivity-->eMSP user:tokenFail
    deactivate chargingActivity
end

